<Window x:Class="MeshViewerDX.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"      
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"         
        xmlns:sys="clr-namespace:System;assembly=mscorlib" 
        xmlns:sdx="clr-namespace:SharpDX;assembly=SharpDX" 
        xmlns:htx="clr-namespace:HelixToolkit.SharpDX.Wpf;assembly=HelixToolkit.SharpDX.Wpf"          
        xmlns:mvx="clr-namespace:MeshViewerDX"
        mc:Ignorable="d" 
        Title="{Binding Student}" Height="600" Width="1200">
    <Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenCmd}"/>
        <KeyBinding Key="Space" Command="{Binding SmoothCmd}"/>
    </Window.InputBindings>
    <Window.Resources>        
        <x:StaticExtension Member="htx:Techniques.RenderTechniques" x:Key="RenderTechniques"/>
        <mvx:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <!-- MoveThumb Template -->
        <ControlTemplate x:Key="MoveThumbTemplate" TargetType="{x:Type mvx:MoveThumb}">
            <Border Background="Transparent">
            </Border>
        </ControlTemplate>
        <!-- Designer Item Template-->
        <ControlTemplate x:Key="DesignerItemTemplate" TargetType="ContentControl">
            <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.Style>
                    <Style>
                        <Setter Property="Grid.Background" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="Grid.IsMouseOver" Value="True">
                                <Setter Property="Grid.Background" Value="Blue" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <!--<Control Template="{StaticResource ResizeDecoratorTemplate}"/>-->
                <ContentPresenter Content="{TemplateBinding ContentControl.Content}"/>
                <mvx:MoveThumb Template="{StaticResource MoveThumbTemplate}" Cursor="SizeAll"/>
            </Grid>
        </ControlTemplate>
    </Window.Resources>
    
    <!-- *** main grid *** -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <!--<RowDefinition Height="Auto"/>-->
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" VerticalAlignment="Top">
            <MenuItem Header="File">
                <MenuItem Header="Open"  InputGestureText="Ctrl+O" Command="{Binding OpenCmd}" />
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Show Parameterization" x:Name="showCanvas" IsCheckable="True" IsChecked="True"/>
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <!--<ColumnDefinition Width="2*"/>-->
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" BorderBrush="Transparent" HorizontalAlignment="Stretch" BorderThickness="1" CornerRadius="0"  >
                <htx:Viewport3DX                
                x:Name="view1" 
                Camera="{Binding Camera}"
                Title="{Binding Title}"
                SubTitle="{Binding SubTitle}"
                RenderTechnique="{Binding RenderTechnique}"
                TextBrush="Black">
                <htx:AmbientLight3D Color="{Binding AmbientLightColor}"/>
                <htx:DirectionalLight3D Color="{Binding DirectionalLightColor}" Direction = "{Binding DirectionalLight1Direction}"/>
                <!--<htx:DirectionalLight3D Color="{Binding DirectionalLightColor}" Direction = "{Binding DirectionalLight2Direction}"/>-->
                <htx:DirectionalLight3D Color="{Binding DirectionalLightColor}" Direction = "{Binding DirectionalLight3Direction}"/>

                <htx:MeshGeometryModel3D x:Name="model1"  Geometry="{Binding MeshModel}"    Transform = "{Binding MeshModelTransform}" Material="{Binding MeshModelMaterial}"   />
                <htx:LineGeometryModel3D x:Name="edges1"  Geometry="{Binding MeshEdges}"    Transform = "{Binding MeshModelTransform}" DepthBias="-10"  Thickness="0.5" Color="{x:Static sdx:Color.Black}"/>
                <htx:LineGeometryModel3D x:Name="border1" Geometry="{Binding BorderEdges}"  Transform = "{Binding MeshModelTransform}" DepthBias="-100" Thickness="1.0" Color="{x:Static sdx:Color.Red}" />
                <htx:LineGeometryModel3D x:Name="bbox1"   Geometry="{Binding Box}"          Transform = "{Binding MeshModelTransform}" DepthBias="-50"  Thickness="0.5" Color="{x:Static sdx:Color.Blue}"/>

                <htx:LineGeometryModel3D x:Name="grid"    Geometry="{Binding Grid}"       Transform = "{Binding GridTransform}"    Thickness="0.5" Smoothness="0.0"  Color="{Binding GridColor}"/>
            </htx:Viewport3DX>
            </Border>

            
            <Border x:Name="canvas" Visibility="{Binding IsChecked, ElementName=showCanvas, Converter={StaticResource boolToVisibilityConverter}}" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="1" BorderBrush="Gray" CornerRadius="3">
                <Image x:Name="meshImage" Source="{Binding MeshDrawingImage}"  Stretch="Uniform">                      
                </Image>
            </Border>
            

   
            <!-- the main canvas-->
            <!--<ItemsControl Grid.Column="1"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ItemsSource="{Binding BorderPoints}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas RenderTransform="{Binding RenderTransform, ElementName=meshImage}"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay}" />
                        <Setter Property="Canvas.Top" Value="{Binding Y, Mode=TwoWay}" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ContentControl x:Name="ball" Width="7" Height="7" Template="{StaticResource DesignerItemTemplate}">
                            <Ellipse ToolTip="Ellypse" Fill="Red" IsHitTestVisible="True">
                            </Ellipse>
                        </ContentControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>-->

            <Border Grid.Column="2" BorderBrush="Transparent" HorizontalAlignment="Stretch" BorderThickness="1" CornerRadius="0"  >                
                
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">        
                    
                    <StackPanel Grid.Column="2" >            
            
                        <Expander Header="Rendering"  HorizontalAlignment="Right" Width="150" VerticalAlignment="Top" BorderBrush="LightGray" IsExpanded="False" Margin="10">
                            <Expander.Background>
                                <SolidColorBrush Opacity="0.25" Color="WhiteSmoke"/>
                            </Expander.Background>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ComboBox  Grid.Row="0" Text="--- Select Model ---" ItemsSource="{Binding RenderTechniques}" SelectedItem="{Binding RenderTechnique}" IsEditable="True" IsReadOnly="True" Margin="3"/>
                                <CheckBox  Grid.Row="1" IsChecked="{Binding IsRendering, ElementName=bbox1}" Margin="3">Render Box</CheckBox>
                                <CheckBox  Grid.Row="2" IsChecked="{Binding IsRendering, ElementName=edges1}" Margin="3">Render Edges</CheckBox>
                                <CheckBox  Grid.Row="3" IsChecked="{Binding IsRendering, ElementName=border1}" Margin="3">Render Border</CheckBox>
                                <CheckBox  Grid.Row="4" IsChecked="{Binding IsRendering, ElementName=grid}" Margin="3">Render Grid</CheckBox>
                                <CheckBox  Grid.Row="5" IsChecked="{Binding FlatShading}" Margin="3">Flat Shading</CheckBox>
                                <CheckBox  Grid.Row="6" IsChecked="{Binding NormalMapping}" Margin="3">Normal Mapping</CheckBox>
                                <ComboBox Grid.Row="7" ItemsSource="{Binding SelectedCurvatureVisualizationTypes}" SelectedItem="{Binding SelectedCurvatureVisualization}" IsEditable="True" IsReadOnly="True" />
                                <Button ToolTip="Normal Map"    Margin="3" Grid.Row="8" Grid.ColumnSpan="2" Command="{Binding OpenNormalMapCmd}">Open Normal Map</Button>
                            </Grid>
                        </Expander>

                        <Expander Header="Laplacian Matrix"  HorizontalAlignment="Right" Width="150" VerticalAlignment="Top" BorderBrush="LightGray" IsExpanded="True" Margin="10">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="3*" />
                                </Grid.ColumnDefinitions>
                                <ComboBox ToolTip="Laplacian Type"    Margin="1" Grid.Row="1" Grid.ColumnSpan="2"  ItemsSource="{Binding LaplacianTypes}" SelectedItem="{Binding SelectedLaplacian}" IsEditable="True" IsReadOnly="True" />
                                <CheckBox ToolTip="Normalized"        Margin="3" Grid.Row="2" Grid.ColumnSpan="2" IsChecked="{Binding LaplacianNormalize}">Normalized</CheckBox>
                                <TextBox  ToolTip="Lambda"            Margin="3" Grid.Row="3" Grid.Column="0" Text="{Binding SmoothingSolver.Lambda}"/>
                                <Slider   ToolTip="Lambda"            Margin="3" Grid.Row="3" Grid.Column="1" Value="{Binding SmoothingSolver.Lambda}" Minimum="0" Maximum="5" IsSnapToTickEnabled="True"  TickFrequency="0.01"/>
                            </Grid>
                        </Expander>

                        <Expander Header="Smoothing"  HorizontalAlignment="Right" Width="150" VerticalAlignment="Top" BorderBrush="LightGray" IsExpanded="True" Margin="10">
                            <Expander.Background>
                                <SolidColorBrush Opacity="0.25" Color="WhiteSmoke"/>
                            </Expander.Background>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="3*" />
                                </Grid.ColumnDefinitions>
                                <ComboBox ToolTip="Smoothing Method"  Margin="3" Grid.Row="0" Grid.ColumnSpan="2"  ItemsSource="{Binding SmoothingMethods}" SelectedItem="{Binding SelectedSmoothingMethod}" IsEditable="True" IsReadOnly="True" />
                                <TextBox IsEnabled="{Binding IsExplicit}" ToolTip="Iterations" Margin="3" Grid.Row="4" Grid.Column="0" Text="{Binding SmoothingSolver.Iterations}"/>
                                <Slider  IsEnabled="{Binding IsExplicit}" ToolTip="Iterations" Margin="3" Grid.Row="4" Grid.Column="1" Value="{Binding SmoothingSolver.Iterations}" Minimum="1" Maximum="50" IsSnapToTickEnabled="True"  TickFrequency="0.01"/>
                                <Button  ToolTip="Process"    Margin="3" Grid.Row="5" Grid.ColumnSpan="2" Command="{Binding SmoothCmd}">Smooth Model</Button>
                                <Button  ToolTip="Reset Model" Margin="3" Grid.Row="6" Grid.ColumnSpan="2" Command="{Binding ResetCmd}">Reset Model</Button>
                            </Grid>
                        </Expander>

                        <!--<Expander Header="Parameterization"  HorizontalAlignment="Right" Width="150" VerticalAlignment="Top" BorderBrush="LightGray" IsExpanded="False" Margin="10">
                            <Expander.Background>
                                <SolidColorBrush Opacity="0.25" Color="WhiteSmoke"/>
                            </Expander.Background>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="3*" />
                                </Grid.ColumnDefinitions>

                                <ComboBox ToolTip="Parameterization Method"  Margin="3" Grid.Row="0" Grid.ColumnSpan="2"  ItemsSource="{Binding ParameterizationMethods}" SelectedItem="{Binding SelectedParameterizationMethod}" IsEditable="True" IsReadOnly="True" />
                                <ComboBox ToolTip="Texture Image"  Margin="3" Grid.Row="1" Grid.ColumnSpan="2"  ItemsSource="{Binding TextureImages}" SelectedItem="{Binding SelectedTextureImage}" IsEditable="True" IsReadOnly="True" />
                                <TextBox ToolTip="Fix Point 1 Index" Margin="3" Grid.Row="2" Grid.Column="0" Text="{Binding ParameterizationSolver.P1Index}"/>
                                <TextBox ToolTip="Fix Point 1 UV"    Margin="3" Grid.Row="2" Grid.Column="1" Text="{Binding ParameterizationSolver.P1UV}"/>
                                <TextBox ToolTip="Fix Point 1 Index" Margin="3" Grid.Row="3" Grid.Column="0" Text="{Binding ParameterizationSolver.P2Index}"/>
                                <TextBox ToolTip="Fix Point 1 UV"    Margin="3" Grid.Row="3" Grid.Column="1" Text="{Binding ParameterizationSolver.P2UV}"/>
                                --><!--<Slider  ToolTip="Opacity" Margin="3" Grid.Row="2" Grid.ColumnSpan="2" x:Name="ImageOpacity" Minimum="0" Maximum="1" Value="0.25" IsSnapToTickEnabled="True"  TickFrequency="0.1"/>--><!--
                                <CheckBox ToolTip="Show Image" IsChecked="{Binding ShowImage}"  x:Name="ShowImage" Margin="3" Grid.Row="4" Grid.ColumnSpan="2">Show Image</CheckBox>
                                <CheckBox ToolTip="Show Mesh"  IsChecked="{Binding ShowMesh2D}" x:Name="ShowMesh" Margin="3" Grid.Row="5" Grid.ColumnSpan="2">Show Mesh</CheckBox>
                                <Button  ToolTip="Process"    Margin="3" Grid.Row="6" Grid.ColumnSpan="2" Command="{Binding ParameterizeCmd}">Process</Button>
                            </Grid>
                        </Expander>-->

                        <!--<Expander Header="Subdivision"  HorizontalAlignment="Right" Width="150" VerticalAlignment="Top" BorderBrush="LightGray" IsExpanded="False" Margin="10">
                            <Expander.Background>
                                <SolidColorBrush Opacity="0.25" Color="WhiteSmoke"/>
                            </Expander.Background>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="3*" />
                                </Grid.ColumnDefinitions>
                                <ComboBox ToolTip="Subdivision Method"  Margin="3" Grid.Row="0" Grid.ColumnSpan="2"  ItemsSource="{Binding SubdivisionMethods}" SelectedItem="{Binding SelectedSubdivisionMethod}" IsEditable="True" IsReadOnly="True" />
                                <TextBox  ToolTip="Steps" Margin="3" Grid.Row="4" Grid.Column="0" Text="{Binding SubdivisionSolver.Steps}"/>
                                <Slider   ToolTip="Steps" Margin="3" Grid.Row="4" Grid.Column="1" Value="{Binding SubdivisionSolver.Steps}" Minimum="1" Maximum="8" IsSnapToTickEnabled="True"  TickFrequency="1"/>
                                <Button   ToolTip="Process"    Margin="3" Grid.Row="5" Grid.ColumnSpan="2" Command="{Binding SubdivisionCmd}">Subdivide Model</Button>
                                <Button   ToolTip="Reset Model" Margin="3" Grid.Row="6" Grid.ColumnSpan="2" Command="{Binding ResetCmd}">Reset Model</Button>
                            </Grid>
                        </Expander>-->

                        <!--<Expander Header="Displacement"  HorizontalAlignment="Right" Width="150" VerticalAlignment="Top" BorderBrush="LightGray" IsExpanded="False" Margin="10">
                            <Expander.Background>
                                <SolidColorBrush Opacity="0.25" Color="WhiteSmoke"/>
                            </Expander.Background>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="2*" />
                                </Grid.ColumnDefinitions>
                                <Button   ToolTip="Detail Model" Margin="3" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Command="{Binding LoadDetailModelCmd}">Load Detail Model</Button>
                                <Button   ToolTip="Load Displacement Map" Margin="3" Grid.Row="2" Grid.Column="0" Command="{Binding LoadDisplacementCmd}">Load Map</Button>
                                <Button   ToolTip="Save Displacement Map" Margin="3" Grid.Row="2" Grid.Column="1" Command="{Binding SaveDisplacementCmd}">Save Map</Button>
                                <Button   ToolTip="Generate Displacement Map"    Margin="3" Grid.Row="3" Grid.ColumnSpan="2" Command="{Binding GenerateDisplacementCmd}">Generate DisplacementMap</Button>
                                <TextBox  ToolTip="Displacement Factor" Margin="3" Grid.Row="4" Grid.Column="0" Text="{Binding SubdivisionSolver.DisplacementFactor}"/>
                                <Slider   ToolTip="Displacement Factor" Margin="3" Grid.Row="4" Grid.Column="1" Value="{Binding SubdivisionSolver.DisplacementFactor}" Minimum="0" Maximum="2" IsSnapToTickEnabled="True"  TickFrequency="0.1"/>
                                <Button   ToolTip="Apply Displacement Map" Margin="3" Grid.Row="5" Grid.ColumnSpan="2" Command="{Binding ApplyDisplacementCmd}">Apply Displacement</Button>
                            </Grid>
                        </Expander>-->

                    </StackPanel>
                
                </ScrollViewer>
            
            </Border>
        
        </Grid>
        <StatusBar Grid.Row="2" VerticalAlignment="Bottom">
            <StatusBar.Background>
                <SolidColorBrush Opacity="0.5" Color="WhiteSmoke"/>
            </StatusBar.Background>
            <StatusBarItem>
                <TextBlock VerticalAlignment="Top" HorizontalAlignment="Left" Text="{Binding FpsCounter.Value, ElementName=view1, StringFormat=D3D11 - \{0:0.00\} FPS}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding Camera.Position, StringFormat=Position: \{0:0.0\}}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding Camera.LookDirection, StringFormat=LookDirection: \{0:0.0\}}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding Camera.UpDirection, StringFormat=UpDirection: \{0:0.0\}}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding Items.Count, ElementName=view1, StringFormat=Children: \{0\}}"/>
            </StatusBarItem>
        </StatusBar>

    </Grid>
</Window>
